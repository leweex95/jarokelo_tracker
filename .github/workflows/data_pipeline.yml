name: Run data pipeline to build the vector store for RAG

on:
  push:
    branches:
      - master
    paths:
      - 'data/raw/*.jsonl'
  workflow_dispatch:
    inputs:
      backend:
        description: "Vector DB backend"
        required: true
        default: "faiss"
      embedding:
        description: "Embedding model"
        required: true
        default: "sentence-transformers/distiluse-base-multilingual-cased-v2"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.set-vars.outputs.backend }}
      embedding: ${{ steps.set-vars.outputs.embedding }}
    steps:
      - name: Set variables
        id: set-vars
        run: |
          echo "backend=${{ github.event.inputs.backend || 'faiss' }}" >> $GITHUB_OUTPUT
          echo "embedding=${{ github.event.inputs.embedding || 'sentence-transformers/distiluse-base-multilingual-cased-v2' }}" >> $GITHUB_OUTPUT

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Cache Poetry packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python & Poetry
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry==2.2.0
          poetry install --no-interaction --no-root

  preprocess:
    runs-on: windows-latest
    needs: setup
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Restore Poetry cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python & install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry==2.2.0
          poetry install --no-interaction --no-root

      - name: Run preprocessing
        run: poetry run python ./scripts/preprocess_data.py

      - name: Commit and push processed data
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add ./data/processed/
          git diff --quiet && git diff --staged --quiet || git commit -m "chore(preprocess): auto-update processed data"
          git push https://x-access-token:$PAT_TOKEN@github.com/${{ github.repository }} HEAD:master

  vectorstore:
    runs-on: windows-latest
    needs: preprocess
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Restore Poetry cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python & install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry==2.2.0
          poetry install --no-interaction --no-root
          
      - name: Ensure latest master
        run: |
          git fetch origin master
          git rebase origin/master

      - name: Build vector store
        run: |
          poetry run python ./scripts/build_vector_store.py \
            --backend "${{ needs.setup.outputs.backend }}" \
            --embedding "${{ needs.setup.outputs.embedding }}"

      - name: Commit and push vector store
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add ./data/vector_store/
          git diff --quiet && git diff --staged --quiet || git commit -m "chore(vector): auto-update vector store (${{ needs.setup.outputs.backend }}, ${{ needs.setup.outputs.embedding }})"
          git push https://x-access-token:$PAT_TOKEN@github.com/${{ github.repository }} HEAD:master
