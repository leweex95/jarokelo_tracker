# This workflow runs the scraper and then the data pipeline in sequence.
# It links together data collection and processing for end-to-end automation:
# (scrape → process for EDA & RAG → chunk → index → build RAG Vector DB.

name: Full data pipeline 
on:
  schedule:
    - cron: "0 22 * * *"
  workflow_dispatch:
    inputs:
        scraper_backend:
            description: 'Scraper backend to use (beautifulsoup/bs)'
            required: false
            default: 'beautifulsoup'
        data_dir:
            description: 'Target data directory'
            required: false
            default: 'data/raw'
        start_page:
            description: 'Start page number'
            required: false
            default: '1'
        until_date:
            description: 'Scrape until this date (YYYY-MM-DD)'
            required: false
            default: ''
        continue_scraping:
            description: 'Continue scraping from last saved state'
            required: false
            default: ''
        vector_backend:
            description: "Vector DB backend"
            required: true
            default: "faiss"
            type: string
        embedding:
            description: "Embedding model"
            required: true
            default: "sentence-transformers/distiluse-base-multilingual-cased-v2"
            type: string

jobs:
  run-scraper:
    uses: leweex95/jarokelo_tracker/.github/workflows/scraper.yml@master
    with: 
      backend: ${{ github.event.inputs.scraper_backend }}
      data_dir: ${{ github.event.inputs.data_dir }}
      start_page: ${{ github.event.inputs.start_page }}
      until_date: ${{ github.event.inputs.until_date }}
      continue_scraping: ${{ github.event.inputs.continue_scraping }}
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

  run-data-pipeline:
    needs: run-scraper
    uses: leweex95/jarokelo_tracker/.github/workflows/data_pipeline.yml@master
    with:
      backend: ${{ github.event.inputs.vector_backend }}
      embedding: ${{ github.event.inputs.embedding }}
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
